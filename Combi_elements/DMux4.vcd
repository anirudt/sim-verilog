$date
	Tue Dec 02 17:45:34 2014
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module DMux $end
$var wire 1 ! clk $end
$var wire 1 " in $end
$var wire 1 # sel $end
$var reg 1 $ p $end
$var reg 1 % q $end
$upscope $end
$scope module stimulus $end
$var wire 1 & a $end
$var wire 1 ' b $end
$var wire 1 ( c $end
$var wire 1 ) d $end
$var reg 1 * clk $end
$var reg 1 + in $end
$var reg 2 , sel [1:0] $end
$scope module tester $end
$var wire 1 - clk $end
$var wire 1 . in $end
$var wire 2 / sel [1:0] $end
$var reg 1 0 a $end
$var reg 1 1 b $end
$var reg 1 2 c $end
$var reg 1 3 d $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x3
x2
x1
x0
b0 /
1.
0-
b0 ,
1+
0*
x)
x(
x'
x&
0%
0$
z#
z"
z!
$end
#5
10
1&
03
0)
02
0(
01
0'
1*
1-
#10
0*
0-
0+
0.
#15
00
0&
1*
1-
#20
0*
0-
b1 ,
b1 /
1+
1.
#25
11
1'
1*
1-
#30
0*
0-
0+
0.
#35
01
0'
1*
1-
#40
0*
0-
b10 ,
b10 /
1+
1.
#45
12
1(
1*
1-
#50
0*
0-
0+
0.
#55
02
0(
1*
1-
#60
0*
0-
b11 ,
b11 /
1+
1.
#65
13
1)
1*
1-
#70
0*
0-
0+
0.
#75
03
0)
1*
1-
#80
0*
0-
